apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/securesign/cosign?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "pull_request" && target_branch
      == "main" && ( "Dockerfile.cosign.rh".pathChanged() || ".tekton/cosign-pull-request.yaml".pathChanged()
      || "cmd/***".pathChanged() || "internal/***".pathChanged() || "pkg/***".pathChanged()
      || "Build.mak".pathChanged() || "Makefile".pathChanged() || "trigger-konflux-builds.txt".pathChanged()
      || "go.mod".pathChanged() || "go.sum".pathChanged() )
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: cli
    appstudio.openshift.io/component: cosign
    pipelines.appstudio.openshift.io/type: build
  name: cosign-on-pull-request
  namespace: rhtas-tenant
spec:
  params:
  - name: dockerfile
    value: Dockerfile.cosign.rh
  - name: git-url
    value: '{{repo_url}}'
  - name: image-expires-after
    value: 5d
  - name: output-image
    value: quay.io/securesign/cli-cosign:on-pr-{{revision}}
  - name: path-context
    value: .
  - name: revision
    value: '{{revision}}'
  - name: prefetch-input
    value: '{"type": "gomod", "path": "."}'
  - name: hermetic
    value: "true"
  - name: build-source-image
    value: "true"
  - name: go_unit_test
    value: "true"
  pipelineRef:
    params:
    - name: url
      value: https://github.com/securesign/pipelines.git
    - name: revision
      value: main
    - name: pathInRepo
      value: pipelines/docker-build-oci-ta.yaml
    resolver: git
  taskRunTemplate:
    serviceAccountName: build-pipeline-cosign
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
